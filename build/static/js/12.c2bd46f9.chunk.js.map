{"version":3,"sources":["components/common/Selector.js","components/common/MobileNavbar.js","hooks/useWindowSize.js","hooks/usePrevious.js","api/traffic.js","components/traffic/Searchbar.js","utils/dateTime.js","components/traffic/RouteFlow.js","views/Traffic.js","const/categories.js","api/axios.js"],"names":["customStyles","option","provided","state","color","isSelected","isFocused","backgroundColor","control","base","border","boxShadow","Selector","className","options","value","defaultValue","onChange","styles","MobileNavbar","history","useHistory","location","useLocation","categories","map","item","pathname","onClick","e","push","label","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","usePrevious","ref","useRef","current","getRoutesByCity","city","a","axios","data","getStopsByCityAndRouteName","routeName","console","log","getArrivalTimeByCityAndRouteName","cities","Searchbar","dispatch","useDispatch","setCity","departure","setDeparture","destination","setDestination","routeOptions","setRouteOptions","route","setRoute","direction","setDirection","prevRoute","routes","useQuery","stops","enabled","arrivalTimes","refetchInterval","Zh_tw","RouteName","departureStopNameZh","DepartureStopNameZh","destinationStopNameZh","DestinationStopNameZh","length","Stops","stop","forEach","arrivalTime","Direction","StopID","estimateTime","EstimateTime","stopStatus","StopStatus","estimates","Estimates","setStops","addSeconds","date","seconds","setSeconds","getSeconds","getHoursAndMinuteStr","fillZero","getHours","getMinutes","digit","toString","RouteFlow","Date","useSelector","routeSelector","maxHeight","setMaxHeight","Container","style","StopName","StationID","Traffic","Main","defaults","baseURL","process","getGMTString","toGMTString","getAuthorization","ShaObj","jsSHA","setHMACKey","update","HMAC","getHMAC","request","method","url","config","toLowerCase","headers","timeout","post","get","params","delete","put","patch"],"mappings":"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","file":"static/js/12.c2bd46f9.chunk.js","sourcesContent":["import Select from \"react-select\";\n\nconst Selector = ({ className, options, value, defaultValue, onChange }) => {\n  return (\n    <Select\n      styles={customStyles}\n      className={`${className}`}\n      options={options}\n      value={value}\n      defaultValue={defaultValue}\n      onChange={onChange}\n    />\n  );\n};\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    color: state.isSelected || state.isFocused ? \"white\" : \"black\",\n    backgroundColor: state.isSelected\n      ? \"#FF1D6C\"\n      : state.isFocused\n      ? \"#FFB72C\"\n      : \"white\",\n  }),\n  control: (base, state) => ({\n    ...base,\n    border: \"none\", // default border color\n    boxShadow:\n      \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n  }),\n};\n\nexport default Selector;\n","import categories from \"const/categories\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst MobileNavbar = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <ul\n      className=\"flex flex-nowrap justify-between items-center space-x-10 rounded-lg shadow-lg \n                  border border-gray-100 px-3 mb-3 text-sm w-full bg-white md:hidden\"\n    >\n      {categories.map((item) => (\n        <li\n          className={`py-2 hover:text-custom-pink ${\n            location.pathname === \"/\" + item.value ? \"text-custom-pink\" : \"\"\n          }`}\n          key={\"smNav-\" + item.value}\n          onClick={(e) => {\n            history.push(`/${item.value}`);\n          }}\n        >\n          {item.label}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MobileNavbar;\n","import { useState, useEffect } from \"react\";\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import { useEffect, useRef } from \"react\";\n\nconst usePrevious = (value) => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n};\n\nexport default usePrevious;\n","import axios from \"api/axios\";\n\nexport const getRoutesByCity = async (city) => {\n  const { data } = await axios(\n    \"get\",\n    `Bus/Route/City/${city}?$select=RouteUID%2CRouteName%2CDepartureStopNameZh%2C%20DestinationStopNameZh&$orderby=RouteUID&$format=JSON`\n  );\n  return data;\n};\n\nexport const getStopsByCityAndRouteName = async (city, routeName) => {\n  console.log(\"getStopsByCityAndRouteName\", city, routeName);\n  const { data } = await axios(\n    \"get\",\n    `Bus/DisplayStopOfRoute/City/${city}/${routeName}?$select=RouteName%2CDirection%2CStops&$top=30&$format=JSON`\n  );\n  console.log(\"data\", data);\n  return data;\n};\n\nexport const getArrivalTimeByCityAndRouteName = async (city, routeName) => {\n  const { data } = await axios(\n    \"get\",\n    `Bus/EstimatedTimeOfArrival/City/${city}/${routeName}?$format=JSON`\n  );\n  return data;\n};\n","import { useState, useEffect } from \"react\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { useQuery } from \"react-query\";\nimport { setStops } from \"redux/slices/routeSlice\";\nimport { useDispatch } from \"react-redux\";\n\n// api\nimport {\n  getRoutesByCity,\n  getStopsByCityAndRouteName,\n  getArrivalTimeByCityAndRouteName,\n} from \"api/traffic\";\n\n// components\nimport Selector from \"components/common/Selector\";\nimport MobileNavbar from \"components/common/MobileNavbar\";\n\n// constant,\n// Only five cities are supported by the API currently\nconst cities = [\n  { label: \"臺北市\", value: \"Taipei\" },\n  { label: \"新北市\", value: \"NewTaipei\" },\n  { label: \"桃園市\", value: \"Taoyuan\" },\n  { label: \"臺中市\", value: \"Taichung\" },\n  { label: \"臺南市\", value: \"Tainan\" },\n];\n\nconst Searchbar = () => {\n  const dispatch = useDispatch();\n  const [city, setCity] = useState(cities[0]);\n  const [departure, setDeparture] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [routeOptions, setRouteOptions] = useState([]);\n  const [route, setRoute] = useState({});\n  const [direction, setDirection] = useState(0);\n\n  const prevRoute = usePrevious(route);\n\n  const { data: routes } = useQuery([\"getRoutesByCity\", city.value], () =>\n    getRoutesByCity(city.value)\n  );\n\n  const { data: stops } = useQuery(\n    [\"getStopsByCityAndRouteName\", city.value, route.value],\n    () => getStopsByCityAndRouteName(city.value, route.value),\n    {\n      // The query will not execute until the userId exists\n      enabled: !!route.value && prevRoute !== route,\n    }\n  );\n\n  const { data: arrivalTimes } = useQuery(\n    [\"getArrivalTimeByCityAndRouteName\", city.value, route.value],\n    () => getArrivalTimeByCityAndRouteName(city.value, route.value),\n    {\n      // The query will not execute until the userId exists\n      enabled: !!route.value && prevRoute !== route,\n      // Refetch the data every second\n      refetchInterval: 15,\n    }\n  );\n\n  /// Set route options after fetching data\n  useEffect(() => {\n    if (routes) {\n      setRouteOptions(\n        routes.map(\n          ({\n            RouteName: { Zh_tw },\n            DepartureStopNameZh,\n            DestinationStopNameZh,\n          }) => ({\n            label: Zh_tw,\n            value: Zh_tw,\n            routeName: Zh_tw,\n            departureStopNameZh: DepartureStopNameZh,\n            destinationStopNameZh: DestinationStopNameZh,\n          })\n        )\n      );\n    }\n  }, [routes]);\n\n  /// Set default route if city change\n  useEffect(() => {\n    if (routeOptions.length > 0) {\n      setRoute(routeOptions[0]);\n      setDeparture(routeOptions[0].departureStopNameZh);\n      setDestination(routeOptions[0].destinationStopNameZh);\n    }\n  }, [routeOptions]);\n\n  useEffect(() => {\n    if (stops && arrivalTimes) {\n      const data = stops[direction].Stops.map((stop) => {\n        arrivalTimes.forEach((arrivalTime) => {\n          if (\n            arrivalTime.Direction === direction &&\n            arrivalTime.StopID === stop.StopID\n          ) {\n            stop = {\n              ...stop,\n              estimateTime: arrivalTime.EstimateTime,\n              stopStatus: arrivalTime.StopStatus,\n              estimates: arrivalTime.Estimates,\n            };\n          }\n        });\n        return stop;\n      });\n      dispatch(setStops(data));\n    }\n  }, [stops, direction, arrivalTimes, dispatch]);\n\n  const toggleRoute = (e) => {\n    setRoute(e);\n    setDeparture(e.departureStopNameZh);\n    setDestination(e.destinationStopNameZh);\n  };\n\n  return (\n    <section\n      className=\"relative bg-white flex flex-col items-stretch w-full px-4 \n                md:px-0 md:pt-9 lg:after:shadow-corner-l lg:before:shadow-corner-r\"\n    >\n      <MobileNavbar />\n      <div className=\"flex justify-center gap-2 mb-4 md:mb-10\">\n        <Selector\n          className=\"tracking-wider w-60\"\n          options={cities}\n          value={city}\n          defaultValue={city}\n          onChange={(e) => setCity(e)}\n        />\n        <Selector\n          className=\"tracking-wider w-60\"\n          options={routeOptions}\n          value={route}\n          onChange={toggleRoute}\n        />\n      </div>\n      <div className=\"flex justify-center gap-10 md:gap-20\">\n        <button\n          className={`text-sm px-8 py-3 hover:bg-gray-100 \n                    ${direction === 0 && \"border-b-2 border-b-custom-pink\"}\n                    md:px-24 md:text-base `}\n          onClick={() => setDirection(0)}\n        >\n          往 <span className=\"text-custom-pink ml-2\">{departure}</span>\n        </button>\n        <button\n          className={`text-sm px-8 py-3 hover:bg-gray-100 \n                    ${direction === 1 && \"border-b-2 border-b-custom-pink\"}\n                    md:text-base md:px-24 `}\n          onClick={() => setDirection(1)}\n        >\n          往 <span className=\"text-custom-pink ml-2\">{destination}</span>\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Searchbar;\n","export const addSeconds = (date, seconds) => {\n  date.setSeconds(date.getSeconds() + seconds);\n  return date;\n};\n\nexport const getHoursAndMinuteStr = (date) => {\n  return fillZero(date.getHours()) + \" : \" + fillZero(date.getMinutes());\n};\n\nconst fillZero = (digit) => {\n  if (digit.toString().length < 2) {\n    digit = \"0\" + digit;\n  }\n  return digit;\n};\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { routeSelector } from \"redux/slices/routeSlice\";\nimport { getHoursAndMinuteStr, addSeconds } from \"utils/dateTime\";\nimport useWindowSize from \"hooks/useWindowSize\";\n// components\nimport Container from \"components/common/Container\";\n\nconst RouteFlow = () => {\n  const date = new Date();\n  const { stops } = useSelector(routeSelector);\n  const [maxHeight, setMaxHeight] = useState(\"1000px\");\n  const { width } = useWindowSize();\n\n  useEffect(() => {\n    if (stops.length > 0 && width > 375) {\n      setMaxHeight(`${(stops.length / 2) * 80}px`);\n    } else {\n      setMaxHeight(`${stops.length * 100}px`);\n    }\n  }, [stops, width]);\n\n  return (\n    <Container>\n      <p className=\"text-sm md:text-base text-custom-pink text-right mb-3\">\n        *每隔15秒自動更新\n      </p>\n      <div className=\"bg-white relative after:shadow-corner-l before:shadow-corner-r p-6 md:p-14\">\n        {stops.length > 0 ? (\n          <div\n            className={`flex flex-col flex-wrap gap-8`}\n            style={{ maxHeight: maxHeight }}\n          >\n            {stops.map((stop) => (\n              <div\n                className=\"w-full flex justify-start items-center gap-6 md:w-1/2 lg:gap-12\"\n                key={stop.StationID}\n              >\n                {stop.estimateTime ? (\n                  <h6 className=\"border-2 border-black px-4 py-2 rounded-lg w-1/3 text-center md:px-8 md:w-1/2\">\n                    {getHoursAndMinuteStr(addSeconds(date, stop.estimateTime))}\n                  </h6>\n                ) : (\n                  <h6 className=\"border-2 border-gray-400 text-gray-400 px-4 py-2 rounded-lg w-1/3 text-center md:px-8 md:w-1/2\">\n                    未發車\n                  </h6>\n                )}\n                <h6 className=\"w-1/2\">{stop.StopName.Zh_tw}</h6>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <h3 className=\"text-gray-400\">請選擇公車路線</h3>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default RouteFlow;\n","// components\nimport Main from \"components/common/Main\";\nimport Searchbar from \"components/traffic/Searchbar\";\nimport RouteFlow from \"components/traffic/RouteFlow\";\n\nconst Traffic = () => {\n  return (\n    <Main className=\"space-y-p[24px] md:space-y-[48px]\">\n      <Searchbar />\n      <RouteFlow />\n    </Main>\n  );\n};\n\nexport default Traffic;\n","const categories = [\n  { label: \"景點\", value: \"ScenicSpot\" },\n  { label: \"活動\", value: \"activity\" },\n  { label: \"美食\", value: \"restaurant\" },\n  { label: \"住宿\", value: \"hotel\" },\n  { label: \"交通\", value: \"traffic\" },\n];\n\nexport default categories;\n","import axios from \"axios\";\nimport jsSHA from \"jssha\";\n\naxios.defaults.baseURL = process.env.REACT_APP_PTX_BASE_URL;\n\nconst getGMTString = () => new Date().toGMTString();\nconst getAuthorization = () => {\n  let ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n  ShaObj.setHMACKey(process.env.REACT_APP_PTX_APP_KEY, \"TEXT\");\n  ShaObj.update(\"x-date: \" + getGMTString());\n  let HMAC = ShaObj.getHMAC(\"B64\");\n  return `hmac username=\"${process.env.REACT_APP_PTX_APP_ID}\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"${HMAC}\"`;\n};\n\nconst request = (method, url, data = null, config) => {\n  method = method.toLowerCase();\n  axios.defaults.headers[\"Authorization\"] = getAuthorization();\n  axios.defaults.headers[\"X-Date\"] = getGMTString();\n  axios.defaults.timeout = 2500;\n  switch (method) {\n    case \"post\":\n      return axios.post(url, data, config);\n    case \"get\":\n      return axios.get(url, { params: data });\n    case \"delete\":\n      return axios.delete(url, { params: data });\n    case \"put\":\n      return axios.put(url, data);\n    case \"patch\":\n      return axios.patch(url, data);\n    default:\n      console.log(`unknown method: ${method}`);\n      return false;\n  }\n};\n\nexport default request;\n"],"sourceRoot":""}